##GENIF[calculatedIsParentObjectAvailable=false]Start
//GENDELETETHISFILE
##GENIF[calculatedIsParentObjectAvailable=false]End  
##GENLOOPPropStart
##GENIF[isFK=true,isFKLookup=false,calculatedisFKObjectParentOFOwnerObject=false]Start 
#TODO this is an intersection table. skip the test for now
//GENDELETETHISFILE
##GENIF[isFK=true,isFKLookup=false,calculatedisFKObjectParentOFOwnerObject=false]End
##GENLOOPPropEnd

    @pytest.mark.asyncio
    async def test_build_GENVALSnakeName(
        self,
        new_bus_obj: GENVALPascalParentObjectNameBusObj,
        new_obj: GENVALPascalParentObjectName,
        session: AsyncSession
    ):
        """
            #TODO add comment
        """
        
        session_context = SessionContext({}, session)

        await current_runtime.initialize(session_context)

        await new_bus_obj.load_from_id(
            new_obj.GENVALSnakeParentObjectName_id
        ) 
        
        child_bus_obj = await new_bus_obj.build_GENVALSnakeName()

        assert child_bus_obj.GENVALSnakeParentObjectName_id == new_bus_obj.GENVALSnakeParentObjectName_id
        assert child_bus_obj.GENVALSnakeParentObjectName_code_peek == new_bus_obj.code

        await child_bus_obj.save()

        assert child_bus_obj.GENVALSnakeName_id > 0

    @pytest.mark.asyncio
    async def test_get_all_GENVALSnakeName(
        self,
        new_bus_obj: GENVALPascalParentObjectNameBusObj,
        new_obj: GENVALPascalParentObjectName,
        session: AsyncSession
    ):
        """
            #TODO add comment
        """
        
        session_context = SessionContext({}, session)

        await current_runtime.initialize(session_context)
        
        new_obj_GENVALSnakeParentObjectName_id = (
            new_obj.GENVALSnakeParentObjectName_id
        )

        await new_bus_obj.load_from_id(
            new_obj_GENVALSnakeParentObjectName_id
        ) 
        
        child_bus_obj = await new_bus_obj.build_GENVALSnakeName() 

        await child_bus_obj.save() 

        child_bus_obj_list = await new_bus_obj.get_all_GENVALSnakeName()

        assert len(child_bus_obj_list) >= 1
        
        assert child_bus_obj_list[0].GENVALSnakeName_id > 0  

        # Check if any item in the list has a matching
        # GENVALSnakeName_id
        assert any(
            child.GENVALSnakeName_id == (
                child_bus_obj.GENVALSnakeName_id)
            for child in child_bus_obj_list
        ), "No matching GENVALSnakeName_id found in the list"