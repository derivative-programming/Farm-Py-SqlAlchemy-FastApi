version: '3.8'

services:
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_USERNAME=user
      - SONARQUBE_JDBC_PASSWORD=password
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_WEB_HOST=0.0.0.0
      - SONAR_WEB_PORT=9000
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - db
    networks:
      - sonarqube-network

  sonarscanner:
    build:
      context: .
      dockerfile: Dockerfile.sonarscanner.app
    container_name: sonarscanner
    depends_on:
      - sonarqube
    environment:
      SONAR_HOST_URL: "http://sonarqube:9000"
      SONAR_PROJECT_KEY: "DemoApp"
      SONAR_LOGIN: "squ_af46316a3d95016df0434848976e577e66b0a90c"  # Replace with your SonarQube token
    volumes:
      - .:/usr/src/app
    networks:
      - sonarqube-network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sonarqube-network

networks:
  sonarqube-network:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgres_data: